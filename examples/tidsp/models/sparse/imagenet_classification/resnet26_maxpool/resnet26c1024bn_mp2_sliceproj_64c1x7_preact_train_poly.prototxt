#Sover parameters
test_iter: 1000
test_interval: 5000
test_initialization: true
display: 100

base_lr: 0.1
iter_size: 2

max_iter: 320000
lr_policy: "poly"
power: 1
momentum: 0.9

weight_decay: 1e-4
regularization_type: "L2"

snapshot: 10000
snapshot_prefix: "training/imagenet_jacintonet26x1c1024_bn_sliceproj_maxpool_preact_L2"
snapshot_after_train: true

solver_mode: GPU
random_seed: 33

#Net parameters
net_param {

name: "ResNet26x1c1024-64C1x7-MP2-SliceProj-PreAct(1000)"

#default_forward_type:  FLOAT16
#default_backward_type: FLOAT16
#default_forward_math:  FLOAT
#default_backward_math: FLOAT

layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {  phase: TRAIN  }
  transform_param {
    crop_size: 224
    mirror: true
    mean_value: 128
    mean_value: 128
    mean_value: 128
  }
  data_param {
    source: "./data/ilsvrc12_train_lmdb"
    batch_size: 128
    backend: LMDB
  }
}

layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {  phase: TEST  }
  transform_param {
    crop_size: 224
    mirror: false       
    mean_value: 128
    mean_value: 128
    mean_value: 128
  }
  data_param {
    source: "./data/ilsvrc12_val_lmdb"
    batch_size: 50
    backend: LMDB
  }
}

layer {
  name: "conv1a"
  bottom: "data"
  top: "conv1a"
  type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }  
  convolution_param {
    num_output: 64
    kernel_size: 7
    pad: 3
    stride: 2
    bias_term: true
    weight_filler { type: "msra" }
    bias_filler { type: "constant" value: 0 }    
    dilation: 1    
    group: 1    
  }
}
layer {
  name: "conv1a/bn"
  bottom: "conv1a"
  top: "conv1a"
  type: "BatchNorm"
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001    
    scale_bias: true  
  }
}
layer {
  name: "conv1a/relu"
  bottom: "conv1a"
  top: "conv1a"
  type: "ReLU"
}

layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1a"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layer {
  name: "res2a_branch2a"
  bottom: "pool1"
  top: "res2a_branch2a"
  type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }  
  convolution_param {
    num_output: 64
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: true
    weight_filler { type: "msra" }
    bias_filler { type: "constant" value: 0 }    
    dilation: 1    
    group: 1   
  }
}
layer {
  name: "res2a_branch2a"
  bottom: "res2a_branch2a"
  top: "res2a_branch2a"
  type: "BatchNorm"
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001    
    scale_bias: true  
  }
}

layer {
  name: "res2a_branch2a/relu"
  bottom: "res2a_branch2a"
  top: "res2a_branch2a"
  type: "ReLU"
}

layer {
  name: "res2a_branch2b"
  bottom: "res2a_branch2a"
  top: "res2a_branch2b"
  type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }  
  convolution_param {
    num_output: 64
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: true
    weight_filler { type: "msra" }
    bias_filler { type: "constant" value: 0 }    
    dilation: 1    
    group: 1   
  }
}
layer {
  name: "res2a_branch2b"
  bottom: "res2a_branch2b"
  top: "res2a_branch2b"
  type: "BatchNorm"
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001    
    scale_bias: true  
  }
}


layer {
  name: "res2a_branch2b/relu"
  bottom: "res2a_branch2b"
  top: "res2a_branch2b"
  type: "ReLU"
}

layer {
  name: "res2a_branch2c"
  bottom: "res2a_branch2b"
  top: "res2a_branch2c"
  type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }  
  convolution_param {
    num_output: 128
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: true
    weight_filler { type: "msra" }
    bias_filler { type: "constant" value: 0 }    
    dilation: 1    
    group: 1   
  }
}
layer {
  name: "res2a_branch2c/slice"
  type: "Slice"
  bottom: "res2a_branch2c"
  top: "res2a_branch2c/slice0"
  top: "res2a_branch2c/slice1"
  slice_param {
    slice_point: 64
    axis: 1
  }
}
layer {
  name: "res2a_branch2c/res"
  type: "Eltwise"
  bottom: "pool1"
  bottom: "res2a_branch2c/slice0"
  top: "res2a_branch2c/res"
}
layer {
  name: "res2a_branch2c/concat"
  type: "Concat"
  bottom: "res2a_branch2c/res"
  bottom: "res2a_branch2c/slice1"  
  top: "res2a_branch2c/concat"
  concat_param {
    axis: 1
  }
}
layer {
  name: "res2a_branch2c/bn"
  bottom: "res2a_branch2c/concat"
  top: "res2a_branch2c/bn"
  type: "BatchNorm"
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001    
    scale_bias: true  
  }
}
layer {
  name: "res2a_branch2c/relu"
  bottom: "res2a_branch2c/bn"
  top: "res2a_branch2c/bn"
  type: "ReLU"
}

layer {
  name: "res2a_branch2d"
  bottom: "res2a_branch2c/bn"
  top: "res2a_branch2d"
  type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }  
  convolution_param {
    num_output: 64
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: true
    weight_filler { type: "msra" }
    bias_filler { type: "constant" value: 0 }    
    dilation: 1    
    group: 1  
  }
}
layer {
  name: "res2a_branch2d/bn"
  bottom: "res2a_branch2d"
  top: "res2a_branch2d"
  type: "BatchNorm"
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001    
    scale_bias: true  
  }
}
layer {
  name: "res2a_branch2d/relu"
  bottom: "res2a_branch2d"
  top: "res2a_branch2d"
  type: "ReLU"
}

layer {
  name: "res2a_branch2e"
  bottom: "res2a_branch2d"
  top: "res2a_branch2e"
  type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }  
  convolution_param {
    num_output: 64
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: true
    weight_filler { type: "msra" }
    bias_filler { type: "constant" value: 0 }    
    dilation: 1    
    group: 1  
  }
}
layer {
  name: "res2a_branch2e/bn"
  bottom: "res2a_branch2e"
  top: "res2a_branch2e"
  type: "BatchNorm"
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001    
    scale_bias: true  
  }
}
layer {
  name: "res2a_branch2e/relu"
  bottom: "res2a_branch2e"
  top: "res2a_branch2e"
  type: "ReLU"
}

layer {
  name: "res2a_branch2f"
  bottom: "res2a_branch2e"
  top: "res2a_branch2f"
  type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }  
  convolution_param {
    num_output: 128
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: true
    weight_filler { type: "msra" }
    bias_filler { type: "constant" value: 0 }    
    dilation: 1    
    group: 1  
  }
}
layer {
  name: "res2a_branch2f/res"
  type: "Eltwise"
  bottom: "res2a_branch2c/concat"
  bottom: "res2a_branch2f"
  top: "res2a_branch2f/res"
}
layer {
  name: "res2a_branch2f/bn"
  bottom: "res2a_branch2f/res"
  top: "res2a_branch2f/res"
  type: "BatchNorm"
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001    
    scale_bias: true  
  }
}
layer {
  name: "res2a_branch2f/relu"
  bottom: "res2a_branch2f/res"
  top: "res2a_branch2f/res"
  type: "ReLU"
}

layer {
  name: "pool2"
  type: "Pooling"
  bottom: "res2a_branch2f/res"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layer {
  name: "res3a_branch2a"
  bottom: "pool2"
  top: "res3a_branch2a"
  type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }  
  convolution_param {
    num_output: 128
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: true
    weight_filler { type: "msra" }
    bias_filler { type: "constant" value: 0 }    
    dilation: 1    
    group: 1   
  }
}
layer {
  name: "res3a_branch2a/bn"
  bottom: "res3a_branch2a"
  top: "res3a_branch2a"
  type: "BatchNorm"
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001    
    scale_bias: true  
  }
}

layer {
  name: "res3a_branch2a/relu"
  bottom: "res3a_branch2a"
  top: "res3a_branch2a"
  type: "ReLU"
}

layer {
  name: "res3a_branch2b"
  bottom: "res3a_branch2a"
  top: "res3a_branch2b"
  type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }  
  convolution_param {
    num_output: 128
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: true
    weight_filler { type: "msra" }
    bias_filler { type: "constant" value: 0 }    
    dilation: 1    
    group: 1   
  }
}
layer {
  name: "res3a_branch2b/bn"
  bottom: "res3a_branch2b"
  top: "res3a_branch2b"
  type: "BatchNorm"
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001    
    scale_bias: true  
  }
}


layer {
  name: "res3a_branch2b/relu"
  bottom: "res3a_branch2b"
  top: "res3a_branch2b"
  type: "ReLU"
}

layer {
  name: "res3a_branch2c"
  bottom: "res3a_branch2b"
  top: "res3a_branch2c"
  type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }  
  convolution_param {
    num_output: 256
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: true
    weight_filler { type: "msra" }
    bias_filler { type: "constant" value: 0 }    
    dilation: 1    
    group: 1   
  }
}
layer {
  name: "res3a_branch2c/slice"
  type: "Slice"
  bottom: "res3a_branch2c"
  top: "res3a_branch2c/slice0"
  top: "res3a_branch2c/slice1"
  slice_param {
    slice_point: 128
    axis: 1
  }
}
layer {
  name: "res3a_branch2c/res"
  type: "Eltwise"
  bottom: "pool2"
  bottom: "res3a_branch2c/slice0"
  top: "res3a_branch2c/res"
}
layer {
  name: "res3a_branch2c/concat"
  type: "Concat"
  bottom: "res3a_branch2c/res"
  bottom: "res3a_branch2c/slice1"  
  top: "res3a_branch2c/concat"
  concat_param {
    axis: 1
  }
}
layer {
  name: "res3a_branch2c/bn"
  bottom: "res3a_branch2c/concat"
  top: "res3a_branch2c/bn"
  type: "BatchNorm"
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001    
    scale_bias: true  
  }
}
layer {
  name: "res3a_branch2c/relu"
  bottom: "res3a_branch2c/bn"
  top: "res3a_branch2c/bn"
  type: "ReLU"
}

layer {
  name: "res3a_branch2d"
  bottom: "res3a_branch2c/bn"
  top: "res3a_branch2d"
  type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }  
  convolution_param {
    num_output: 128
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: true
    weight_filler { type: "msra" }
    bias_filler { type: "constant" value: 0 }    
    dilation: 1    
    group: 1  
  }
}
layer {
  name: "res3a_branch2d"
  bottom: "res3a_branch2d"
  top: "res3a_branch2d"
  type: "BatchNorm"
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001    
    scale_bias: true  
  }
}
layer {
  name: "res3a_branch2d/relu"
  bottom: "res3a_branch2d"
  top: "res3a_branch2d"
  type: "ReLU"
}

layer {
  name: "res3a_branch2e"
  bottom: "res3a_branch2d"
  top: "res3a_branch2e"
  type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }  
  convolution_param {
    num_output: 128
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: true
    weight_filler { type: "msra" }
    bias_filler { type: "constant" value: 0 }    
    dilation: 1    
    group: 1  
  }
}
layer {
  name: "res3a_branch2e"
  bottom: "res3a_branch2e"
  top: "res3a_branch2e"
  type: "BatchNorm"
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001    
    scale_bias: true  
  }
}
layer {
  name: "res3a_branch2e/relu"
  bottom: "res3a_branch2e"
  top: "res3a_branch2e"
  type: "ReLU"
}

layer {
  name: "res3a_branch2f"
  bottom: "res3a_branch2e"
  top: "res3a_branch2f"
  type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }  
  convolution_param {
    num_output: 256
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: true
    weight_filler { type: "msra" }
    bias_filler { type: "constant" value: 0 }    
    dilation: 1    
    group: 1  
  }
}
layer {
  name: "res3a_branch2f/res"
  type: "Eltwise"
  bottom: "res3a_branch2c/concat"
  bottom: "res3a_branch2f"
  top: "res3a_branch2f/res"
}
layer {
  name: "res3a_branch2f/bn"
  bottom: "res3a_branch2f/res"
  top: "res3a_branch2f/res"
  type: "BatchNorm"
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001    
    scale_bias: true  
  }
}
layer {
  name: "res3a_branch2f/relu"
  bottom: "res3a_branch2f/res"
  top: "res3a_branch2f/res"
  type: "ReLU"
}

layer {
  name: "pool3"
  type: "Pooling"
  bottom: "res3a_branch2f/res"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layer {
  name: "res4a_branch2a"
  bottom: "pool3"
  top: "res4a_branch2a"
  type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }  
  convolution_param {
    num_output: 256
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: true
    weight_filler { type: "msra" }
    bias_filler { type: "constant" value: 0 }    
    dilation: 1    
    group: 1   
  }
}
layer {
  name: "res4a_branch2a/bn"
  bottom: "res4a_branch2a"
  top: "res4a_branch2a"
  type: "BatchNorm"
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001    
    scale_bias: true  
  }
}
layer {
  name: "res4a_branch2a/relu"
  bottom: "res4a_branch2a"
  top: "res4a_branch2a"
  type: "ReLU"
}

layer {
  name: "res4a_branch2b"
  bottom: "res4a_branch2a"
  top: "res4a_branch2b"
  type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }  
  convolution_param {
    num_output: 256
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: true
    weight_filler { type: "msra" }
    bias_filler { type: "constant" value: 0 }    
    dilation: 1    
    group: 1   
  }
}
layer {
  name: "res4a_branch2b/bn"
  bottom: "res4a_branch2b"
  top: "res4a_branch2b"
  type: "BatchNorm"
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001    
    scale_bias: true  
  }
}


layer {
  name: "res4a_branch2b/relu"
  bottom: "res4a_branch2b"
  top: "res4a_branch2b"
  type: "ReLU"
}

layer {
  name: "res4a_branch2c"
  bottom: "res4a_branch2b"
  top: "res4a_branch2c"
  type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }  
  convolution_param {
    num_output: 512
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: true
    weight_filler { type: "msra" }
    bias_filler { type: "constant" value: 0 }    
    dilation: 1    
    group: 1   
  }
}
layer {
  name: "res4a_branch2c/slice"
  type: "Slice"
  bottom: "res4a_branch2c"
  top: "res4a_branch2c/slice0"
  top: "res4a_branch2c/slice1"
  slice_param {
    slice_point: 256
    axis: 1
  }
}
layer {
  name: "res4a_branch2c/res"
  type: "Eltwise"
  bottom: "pool3"
  bottom: "res4a_branch2c/slice0"
  top: "res4a_branch2c/res"
}
layer {
  name: "res4a_branch2c/concat"
  type: "Concat"
  bottom: "res4a_branch2c/res"
  bottom: "res4a_branch2c/slice1"  
  top: "res4a_branch2c/concat"
  concat_param {
    axis: 1
  }
}
layer {
  name: "res4a_branch2c/bn"
  bottom: "res4a_branch2c/concat"
  top: "res4a_branch2c/bn"
  type: "BatchNorm"
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001    
    scale_bias: true  
  }
}
layer {
  name: "res4a_branch2c/relu"
  bottom: "res4a_branch2c/bn"
  top: "res4a_branch2c/bn"
  type: "ReLU"
}

layer {
  name: "res4a_branch2d"
  bottom: "res4a_branch2c/bn"
  top: "res4a_branch2d"
  type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }  
  convolution_param {
    num_output: 256
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: true
    weight_filler { type: "msra" }
    bias_filler { type: "constant" value: 0 }    
    dilation: 1    
    group: 1  
  }
}
layer {
  name: "res4a_branch2d"
  bottom: "res4a_branch2d"
  top: "res4a_branch2d"
  type: "BatchNorm"
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001    
    scale_bias: true  
  }
}
layer {
  name: "res4a_branch2d/relu"
  bottom: "res4a_branch2d"
  top: "res4a_branch2d"
  type: "ReLU"
}

layer {
  name: "res4a_branch2e"
  bottom: "res4a_branch2d"
  top: "res4a_branch2e"
  type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }  
  convolution_param {
    num_output: 256
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: true
    weight_filler { type: "msra" }
    bias_filler { type: "constant" value: 0 }    
    dilation: 1    
    group: 1  
  }
}
layer {
  name: "res4a_branch2e"
  bottom: "res4a_branch2e"
  top: "res4a_branch2e"
  type: "BatchNorm"
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001    
    scale_bias: true  
  }
}
layer {
  name: "res4a_branch2e/relu"
  bottom: "res4a_branch2e"
  top: "res4a_branch2e"
  type: "ReLU"
}

layer {
  name: "res4a_branch2f"
  bottom: "res4a_branch2e"
  top: "res4a_branch2f"
  type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }  
  convolution_param {
    num_output: 512
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: true
    weight_filler { type: "msra" }
    bias_filler { type: "constant" value: 0 }    
    dilation: 1    
    group: 1  
  }
}
layer {
  name: "res4a_branch2f/res"
  type: "Eltwise"
  bottom: "res4a_branch2c/concat"
  bottom: "res4a_branch2f"
  top: "res4a_branch2f/res"
}
layer {
  name: "res4a_branch2f/bn"
  bottom: "res4a_branch2f/res"
  top: "res4a_branch2f/res"
  type: "BatchNorm"
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001    
    scale_bias: true  
  }
}
layer {
  name: "res4a_branch2f/relu"
  bottom: "res4a_branch2f/res"
  top: "res4a_branch2f/res"
  type: "ReLU"
}

layer {
  name: "pool4"
  type: "Pooling"
  bottom: "res4a_branch2f/res"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layer {
  name: "res5a_branch2a"
  bottom: "pool4"
  top: "res5a_branch2a"
  type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }  
  convolution_param {
    num_output: 512
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: true
    weight_filler { type: "msra" }
    bias_filler { type: "constant" value: 0 }    
    dilation: 1    
    group: 1   
  }
}
layer {
  name: "res5a_branch2a"
  bottom: "res5a_branch2a"
  top: "res5a_branch2a"
  type: "BatchNorm"
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001    
    scale_bias: true  
  }
}

layer {
  name: "res5a_branch2a/relu"
  bottom: "res5a_branch2a"
  top: "res5a_branch2a"
  type: "ReLU"
}

layer {
  name: "res5a_branch2b"
  bottom: "res5a_branch2a"
  top: "res5a_branch2b"
  type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }  
  convolution_param {
    num_output: 512
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: true
    weight_filler { type: "msra" }
    bias_filler { type: "constant" value: 0 }    
    dilation: 1    
    group: 1   
  }
}
layer {
  name: "res5a_branch2b"
  bottom: "res5a_branch2b"
  top: "res5a_branch2b"
  type: "BatchNorm"
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001    
    scale_bias: true  
  }
}


layer {
  name: "res5a_branch2b/relu"
  bottom: "res5a_branch2b"
  top: "res5a_branch2b"
  type: "ReLU"
}

layer {
  name: "res5a_branch2c"
  bottom: "res5a_branch2b"
  top: "res5a_branch2c"
  type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }  
  convolution_param {
    num_output: 1024
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: true
    weight_filler { type: "msra" }
    bias_filler { type: "constant" value: 0 }    
    dilation: 1    
    group: 1   
  }
}
layer {
  name: "res5a_branch2c/slice"
  type: "Slice"
  bottom: "res5a_branch2c"
  top: "res5a_branch2c/slice0"
  top: "res5a_branch2c/slice1"
  slice_param {
    slice_point: 512
    axis: 1
  }
}
layer {
  name: "res5a_branch2c/res"
  type: "Eltwise"
  bottom: "pool4"
  bottom: "res5a_branch2c/slice0"
  top: "res5a_branch2c/res"
}
layer {
  name: "res5a_branch2c/concat"
  type: "Concat"
  bottom: "res5a_branch2c/res"
  bottom: "res5a_branch2c/slice1"  
  top: "res5a_branch2c/concat"
  concat_param {
    axis: 1
  }
}
layer {
  name: "res5a_branch2c/bn"
  bottom: "res5a_branch2c/concat"
  top: "res5a_branch2c/bn"
  type: "BatchNorm"
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001    
    scale_bias: true  
  }
}
layer {
  name: "res5a_branch2c/relu"
  bottom: "res5a_branch2c/bn"
  top: "res5a_branch2c/bn"
  type: "ReLU"
}

layer {
  name: "res5a_branch2d"
  bottom: "res5a_branch2c/bn"
  top: "res5a_branch2d"
  type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }  
  convolution_param {
    num_output: 512
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: true
    weight_filler { type: "msra" }
    bias_filler { type: "constant" value: 0 }    
    dilation: 1    
    group: 1  
  }
}
layer {
  name: "res5a_branch2d"
  bottom: "res5a_branch2d"
  top: "res5a_branch2d"
  type: "BatchNorm"
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001    
    scale_bias: true  
  }
}
layer {
  name: "res5a_branch2d/relu"
  bottom: "res5a_branch2d"
  top: "res5a_branch2d"
  type: "ReLU"
}

layer {
  name: "res5a_branch2e"
  bottom: "res5a_branch2d"
  top: "res5a_branch2e"
  type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }  
  convolution_param {
    num_output: 512
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: true
    weight_filler { type: "msra" }
    bias_filler { type: "constant" value: 0 }    
    dilation: 1    
    group: 1  
  }
}
layer {
  name: "res5a_branch2e"
  bottom: "res5a_branch2e"
  top: "res5a_branch2e"
  type: "BatchNorm"
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001    
    scale_bias: true  
  }
}
layer {
  name: "res5a_branch2e/relu"
  bottom: "res5a_branch2e"
  top: "res5a_branch2e"
  type: "ReLU"
}

layer {
  name: "res5a_branch2f"
  bottom: "res5a_branch2e"
  top: "res5a_branch2f"
  type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }  
  convolution_param {
    num_output: 1024
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: true
    weight_filler { type: "msra" }
    bias_filler { type: "constant" value: 0 }    
    dilation: 1    
    group: 1  
  }
}
layer {
  name: "res5a_branch2f/res"
  type: "Eltwise"
  bottom: "res5a_branch2c/concat"
  bottom: "res5a_branch2f"
  top: "res5a_branch2f/res"
}
layer {
  name: "res5a_branch2f/bn"
  bottom: "res5a_branch2f/res"
  top: "res5a_branch2f/res"
  type: "BatchNorm"
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001    
    scale_bias: true  
  }
}
layer {
  name: "res5a_branch2f/relu"
  bottom: "res5a_branch2f/res"
  top: "res5a_branch2f/res"
  type: "ReLU"
}

layer {
  name: "pool5"
  bottom: "res5a_branch2f/res"
  top: "pool5"
  type: "Pooling"
  pooling_param {
    pool: AVE
    global_pooling: true
  }
}
layer {
  name: "fc1000"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc1000"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }
  inner_product_param {
     num_output: 1000
     weight_filler { type: "msra" }
     bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc1000"
  bottom: "label"
  propagate_down: 1
  propagate_down: 0
  top: "loss"
  loss_weight: 1
}

layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "fc1000"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "accuracy/top-5"
  type: "Accuracy"
  bottom: "fc1000"
  bottom: "label"
  top: "accuracy/top-5"
  include {
    phase: TEST
  }
  accuracy_param {
    top_k: 5
  }
}

}


